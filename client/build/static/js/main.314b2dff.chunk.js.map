{"version":3,"sources":["BaseReactComponent.js","Header.js","actions.js","DeletedMovie.js","DeletedMovieList.js","DeletedMovies.js","LocationList.js","AddMovie.js","Login.js","Movie.js","MovieList.js","ImdbInfo.js","SearchBar.js","OptionsBar.js","Main.js","App.js","serviceWorker.js","index.js"],"names":["BaseReactComponent","this","_subscription","subscribe","state","setState","filterState","bind","filteredState","getState","isPlainObject","Error","unsubscribe","React","Component","Header","className","props","title","setEmptyState","name","password","location","bluray","dvd","getLocations","fetch","then","res","status","json","map","locs","concat","catch","error","alert","updateLoginForm","field","value","updateForm","updateCheckBox","checked","clearSearch","deleteLocation","loc","prompt","request","Request","method","body","JSON","stringify","headers","message","locationList","filter","err","addLocation","movieSearch","movieForm","blu","locationSearch","locationForm","resetAddMovieForm","DeletedMovie","movie","date_ob","Date","datedel","date","getDate","slice","month","getMonth","year","getFullYear","hours","getHours","minutes","getMinutes","seconds","getSeconds","class","onClick","e","id","deletedMovieList","_id","recover","permDelete","DeletedMovieList","movies","key","DeletedMovies","to","MovieList","locations","classNam","val","onChange","target","AddMovie","imdbInfo","movieList","addMovieForm","onSubmit","preventDefault","addMovie","type","LocationList","Login","history","push","loginForm","undefined","currentUser","login","Movie","window","scrollTo","softDelete","ImdbInfo","info","Title","Year","Runtime","Genre","Director","Actors","imdbRating","SearchBar","OptionsBar","logoutUser","Main","App","cookie","exact","path","render","Boolean","hostname","match","startLogging","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"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","file":"static/js/main.314b2dff.chunk.js","sourcesContent":["import { isPlainObject } from \"lodash-es\";\nimport React from \"react\";\nimport { getState, subscribe, unsubscribe } from \"statezero\";\n\nclass BaseReactComponent extends React.Component {\n    componentWillMount() {\n        const callback = state => {\n            this.setState(state);\n        };\n        this._subscription = subscribe(callback, this.filterState.bind(this));\n        const filteredState = this.filterState(getState());\n        if (!isPlainObject(filteredState)) {\n            throw new Error(\"The result of filterState() must be an object\");\n        }\n        this.setState(filteredState);\n    }\n\n    componentWillUnmount() {\n        unsubscribe(this._subscription);\n    }\n\n    filterState() {\n        // Sub-classes must override this method.\n        throw new Error(\"filterState() is not implemented\");\n    }\n}\n\nexport default BaseReactComponent;\n","import React from 'react';\n\nclass Header extends React.Component {\n  render() {\n    return (\n      <div className=\"page-header\">\n        <h1>{this.props.title}</h1>\n      </div>\n    );\n  }\n}\n\nexport default Header;\n","import { getState, setState } from \"statezero\";\n\n// Initialize all state paths used by app as empty.\nexport const setEmptyState = () => {\n  setState(\"cookie\", false);\n  setState(\"currentUser\", null);\n  setState(\"loginForm\", { name: \"\", password: \"\" });\n  setState(\"movieForm\", { name: \"\", location: \"\\\"Location\\\"\", bluray: false, dvd: false });\n  setState(\"addMovieForm\", { name: \"\", location: \"\\\"Location\\\"\", bluray: false, dvd: false });\n  setState(\"locationForm\", { location: \"\\\"Location\\\"\" });\n  setState(\"locationList\", []);\n  setState(\"movieList\", []);\n  setState(\"deletedMovieList\", []);\n  setState(\"imdbInfo\", {});\n};\n\nexport const readCookie = () => {\n  const url = \"/users/check-session\";\n  fetch(url).then(res => {\n    if (res.status === 200) {\n      return res.json();\n    }\n  }).then(json => {\n    // console.log('setting cookie');\n    if (json && json.currentUser) {\n      setState(\"currentUser\", json.currentUser);\n    }\n    setState(\"cookie\", true);\n  }).catch(error => {\n    alert(error);\n  });\n};\n\nexport const getLocations = () => {\n  const url = \"/locations\";\n  fetch(url).then(res => {\n    if (res.status === 200) {\n      return res.json();\n    }\n  }).then(json => {\n    json = json.map((location) => location.name); // + \"(\" + location.num_movies + \")\");\n    const locs = [\"\\\"Location\\\"\"].concat(json);\n    setState(\"locationList\", locs);\n  }).catch(error => {\n    alert(error);\n  });\n}\n\nexport const updateLoginForm = field => {\n  const { name, value } = field;\n  setState(`loginForm.${name}`, value);\n};\n\nexport const updateForm = field => {\n  const { className, name, value } = field;\n  setState(`${className}.${name}`, value);\n};\n\nexport const updateCheckBox = field => {\n  const { className, name, checked } = field;\n  setState(`${className}.${name}`, checked);\n}\n\nexport const login = (e) => {\n  e.preventDefault();\n  // Create our request constructor with all the parameters we need\n  const request = new Request(\"/loginUser\", {\n    method: \"post\",\n    body: JSON.stringify(getState(\"loginForm\")),\n    headers: {\n      'Accept': \"application/json, text/plain, */*\",\n      \"Content-Type\": \"application/json\"\n    }\n  });\n\n  // Send the request with fetch()\n  fetch(request).then(res => {\n    return res.json();\n  }).then(json => {\n    if (json.currentUser !== undefined) {\n      setState(\"currentUser\", json.currentUser);\n    } else {\n      alert(\"Invalid name or password\");\n    }\n  }).catch(error => {\n    alert(\"something went wrong :(\");\n  });\n};\n\nexport const logout = () => {\n  const url = \"/logoutUser\";\n  fetch(url).then(res => {\n    setEmptyState();\n    setState(\"cookie\", true);\n  }).catch(error => {\n    alert(error);\n  });\n};\n\nexport const clearSearch = () => {\n  setState(\"movieList\", []);\n}\n\nexport const deleteLocation = () => {\n  const loc = prompt(\"Please enter location to delete\", \"\");\n  if (loc == null) {\n    return;\n  } else if (loc === \"\" || loc === \"\\\"Location\\\"\") {\n    alert(\"Enter a proper location\");\n    return;\n  }\n  const request = new Request('/deleteLocation', {\n    method: 'delete',\n    body: JSON.stringify({ loc }),\n    headers: {\n      'Accept': 'application/json, text/plain, */*',\n      'Content-Type': 'application/json'\n    },\n  });\n\n  fetch(request).then((res) => {\n    if (res.status === 500) {\n      alert(\"there was a server error, sorry :(\");\n    } else if (res.status === 400) {\n      return res.json();\n    } else {\n      return res.json();\n    }\n  }).then((json) => {\n    if (\"message\" in json) {\n      alert(json.message);\n    } else {\n      const locationList = getState(\"locationList\");\n      setState(\"locationList\", locationList.filter((location) => location !== loc));\n    }\n  }).catch((err) => {\n    alert(err);\n  })\n}\n\nexport const addLocation = () => {\n  const loc = prompt(\"Please enter new location name\", \"\");\n  if (loc == null) {\n    return;\n  } else if (loc === \"\" || loc === \"\\\"Location\\\"\") {\n    alert(\"Enter a proper location\");\n    return;\n  }\n  const request = new Request(\"/createLocation\", {\n    method: \"post\",\n    body: JSON.stringify({ loc }),\n    headers: {\n      'Accept': 'application/json, text/plain, */*',\n      'Content-Type': 'application/json'\n    },\n  })\n\n  fetch(request).then((res) => {\n    if (res.status === 500) {\n      alert(\"make sure the new location doesn't already exist\");\n    } else {\n      const locationList = getState(\"locationList\");\n      setState(\"locationList\", locationList.concat([loc]));\n    }\n  }, (err) => {\n    alert(err);\n  })\n}\n\nexport const movieSearch = () => {\n  const movieForm = getState(\"movieForm\");\n  const name = movieForm.name === \"\" ? '-' : movieForm.name;\n  const loc = movieForm.location === \"\\\"Location\\\"\" ? \"-\" : movieForm.location;\n  const blu = movieForm.blu ? \"Y\" : \"-\";\n  const dvd = movieForm.dvd ? \"Y\" : \"-\";\n  const url = \"/movies/\" + name + \"/\" + loc + \"/\" + blu + \"/\" + dvd;\n  fetch(url).then((res) => {\n    if (res.status === 500) {\n      alert(\"there was a server error, sorry :(\");\n    } else {\n      return res.json();\n    }\n  }).then((json) => {\n    setState(\"movieList\", json);\n  }).catch((err) => {\n    alert(err);\n  })\n}\n\nexport const locationSearch = () => {\n  const locationForm = getState(\"locationForm\");\n  if (locationForm.location === \"\\\"Location\\\"\") {\n    alert(\"Please select a location\");\n  } else {\n    fetch(\"/movies/-/\" + locationForm.location + \"/-/-\").then((res) => {\n      if (res.status === 500) {\n        alert(\"there was a server error, sorry :(\");\n      } else {\n        return res.json();\n      }\n    }).then((json) => {\n      setState(\"movieList\", json);\n    }).catch((err) => {\n      alert(err);\n    })\n  }\n}\n\nexport const imdbSearch = (title) => {\n  fetch('/imdb/' + title).then((res) => {\n    if (res.status === 200) {\n      return res.json();\n    } else {\n      alert(\"there was a server error, sorry :(\");\n    }\n  }).then((json) => {\n    setState(\"imdbInfo\", json);\n    // This is needed if the user scrolls down during page load and you want to make sure the page is scrolled to the top once it's fully loaded. This has Cross-browser support.\n    window.scrollTo(0, 0);\n  }).catch((err) => {\n    alert(err);\n  })\n}\n\nexport const resetAddMovieForm = () => {\n  setState(\"addMovieForm\", { name: \"\", location: \"\\\"Location\\\"\", bluray: false, dvd: false });\n}\n\nexport const addMovie = (e) => {\n  e.preventDefault();\n  const request = new Request('/addMovie', {\n    method: \"post\",\n    body: JSON.stringify(getState(\"addMovieForm\")),\n    headers: {\n      'Accept': 'application/json, text/plain, */*',\n      'Content-Type': 'application/json'\n    },\n  })\n  fetch(request).then((res) => {\n    if (res.status !== 200) {\n      alert(\"there was a server error, sorry :(\");\n    } else {\n      return res.json();\n    }\n  }).then((json) => {\n    resetAddMovieForm();\n    alert(\"Added Movie\\nName: \" + json.name + \"\\nLocation: \" +\n      json.location + \"\\nbluray: \" + json.bluray + \" dvd: \" + json.dvd);\n  }).catch((err) => {\n    alert(err);\n  });\n}\n\nexport const getDeletedMovies = () => {\n  const url = \"/delmovies\";\n  fetch(url).then(res => {\n    if (res.status === 200) {\n      return res.json();\n    }\n  }).then(json => {\n    setState(\"deletedMovieList\", json);\n  }).catch(error => {\n    alert(error);\n  });\n}\n\nexport const softDelete = (id) => {\n  // from deletedMovieList\n  const r = prompt(\"Are you sure (type yes)\", \"\");\n  if (r !== \"yes\") {\n    return;\n  }\n  const request = new Request('/movies/' + id, {\n    method: 'delete',\n    body: JSON.stringify({}),\n    headers: {\n      'Accept': 'application/json, text/plain, */*',\n      'Content-Type': 'application/json'\n    },\n  });\n\n  fetch(request).then((res) => {\n    if (res.status === 500) {\n      alert(\"there was a server error, sorry :(\");\n    } else {\n      return res.json();\n    }\n  }).then((json) => {\n    const movieList = getState(\"movieList\");\n    setState(\"movieList\", movieList.filter((movie) => movie._id !== id));\n  }).catch((err) => {\n    alert(err);\n  })\n}\n\nexport const permDelete = (id) => {\n  // from deletedMovieList\n  const r = prompt(\"Are you sure (type yes)\", \"\");\n  if (r !== \"yes\") {\n    return;\n  }\n  const request = new Request('/delmovies/' + id, {\n    method: 'delete',\n    body: JSON.stringify({}),\n    headers: {\n      'Accept': 'application/json, text/plain, */*',\n      'Content-Type': 'application/json'\n    },\n  });\n\n  fetch(request).then((res) => {\n    if (res.status === 200) {\n      const deletedMovieList = getState(\"deletedMovieList\");\n      setState(\"deletedMovieList\", deletedMovieList.filter((movie) => movie._id !== id));\n    }\n    return res.json();\n  }).then((json) => {\n    if (\"message\" in json) {\n      alert(json.message);\n    }\n  }).catch((err) => {\n    alert(err);\n  });\n}\n\nexport const recover = (id) => {\n  // from deletedMovieList\n  const request = new Request('/delmovies/' + id, {\n    method: 'put',\n    body: JSON.stringify({}),\n    headers: {\n      'Accept': 'application/json, text/plain, */*',\n      'Content-Type': 'application/json'\n    },\n  });\n\n  fetch(request).then((res) => {\n    if (res.status === 200) {\n      const deletedMovieList = getState(\"deletedMovieList\");\n      setState(\"deletedMovieList\", deletedMovieList.filter((movie) => movie._id !== id));\n    }\n    return res.json();\n  }).then((json) => {\n    if (\"message\" in json) {\n      alert(json.message);\n    }\n  }).catch((err) => {\n    alert(err);\n  });\n}","import React from 'react';\r\nimport { permDelete, recover } from \"./actions\";\r\nimport './DeletedMovieList.css';\r\n\r\nclass DeletedMovie extends React.Component {\r\n  render() {\r\n    const { movie } = this.props;\r\n    let date_ob = new Date(movie.datedel);\r\n    let date = (\"0\" + date_ob.getDate()).slice(-2);\r\n    let month = (\"0\" + (date_ob.getMonth() + 1)).slice(-2);\r\n    let year = date_ob.getFullYear();\r\n    let hours = date_ob.getHours();\r\n    if (hours < 10) {\r\n      hours = \"0\" + hours;\r\n    }\r\n    let minutes = date_ob.getMinutes();\r\n    if (minutes < 10) {\r\n      minutes = \"0\" + minutes;\r\n    }\r\n    let seconds = date_ob.getSeconds();\r\n    if (seconds < 10) {\r\n      seconds = \"0\" + seconds;\r\n    }\r\n    return (\r\n      <li>\r\n        <div className=\"jumbotron col-sm-12 pull-center\">\r\n          <p>Title: {movie.name}</p>\r\n          <p>Location: {movie.location}</p>\r\n          <p>Bluray: {movie.bluray ? \"Yes\" : \"No\"} </p>\r\n          <p>DVD: {movie.dvd ? \"Yes\" : \"No\"}</p>\r\n          <p>Date Deleted: {year + \"-\" + month + \"-\" + date + \" \" + hours + \":\" + minutes + \":\" + seconds} </p>\r\n          <button class=\"btn btn-primary rec\" onClick={(e) => recover(movie._id)}> Recover </button>\r\n          <button class=\"btn btn-primary del\" onClick={(e) => permDelete(movie._id)}> Delete </button>\r\n        </div>\r\n      </li>\r\n    );\r\n  }\r\n}\r\nexport default DeletedMovie;","import React from 'react';\r\nimport DeletedMovie from './DeletedMovie';\r\nimport './DeletedMovieList.css';\r\n\r\n{ /* movies searched up will go in here */}\r\nclass DeletedMovieList extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  render() {\r\n    const movies = this.props.movies;\r\n    return (\r\n      <div id=\"mainDiv\" class=\"container row\">\r\n        <ul className=\"col-sm-12 pull-center moviesList\">\r\n          { movies.map((movie) => {\r\n            return( <DeletedMovie key={ movie._id } movie={ movie } /> );\r\n          }) }\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DeletedMovieList;","import React from 'react';\r\nimport Header from './Header';\r\nimport DeletedMovieList from './DeletedMovieList';\r\nimport BaseReactComponent from \"./BaseReactComponent\";\r\nimport { getDeletedMovies } from \"./actions\";\r\nimport { Link } from \"react-router-dom\";\r\nimport './DeletedMovies.css';\r\n\r\nclass DeletedMovies extends BaseReactComponent {\r\n  filterState({ deletedMovieList }) {\r\n    return { deletedMovieList };\r\n  }\r\n  constructor(props) {\r\n    super(props);\r\n    getDeletedMovies();// get deleted movies\r\n  }\r\n  render() {\r\n    const { deletedMovieList } = this.state;\r\n    return (\r\n      <div className=\"container\">\r\n        <Header title=\"Deleted Movies\" />\r\n        <Link to=\"/main\" className=\"btn btn-primary ret\"> Return </Link> <br /><br />\r\n        <DeletedMovieList movies={deletedMovieList} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DeletedMovies;","import React from 'react';\r\nimport { updateForm } from \"./actions\";\r\nimport './SearchBar.css';\r\n\r\n{ /* movies searched up will go in here */}\r\nclass MovieList extends React.Component {\r\n  render() {\r\n    const {locations, classNam, val} = this.props;\r\n    return (\r\n      <select className={classNam} name=\"location\" value={val} onChange={e => updateForm(e.target)}>\r\n        { locations.map((location) => <option value={location}>{location}</option> ) }\r\n      </select>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MovieList;","import React from 'react';\r\nimport Header from './Header';\r\nimport { Link } from \"react-router-dom\";\r\nimport { getLocations, updateForm, updateCheckBox, addMovie, resetAddMovieForm } from \"./actions\";\r\nimport BaseReactComponent from \"./BaseReactComponent\";\r\nimport LocationList from './LocationList';\r\n\r\nclass AddMovie extends BaseReactComponent {\r\n  filterState({ locationList, imdbInfo, movieList, addMovieForm }) {\r\n    return { locationList, imdbInfo, movieList, addMovieForm };\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    getLocations();\r\n  }\r\n\r\n  render() {\r\n    const { locationList, addMovieForm } = this.state;\r\n    return (\r\n      <div className=\"container\">\r\n        <Header title=\"Add Movie\" />\r\n        <div className=\"container row\">\r\n          <div className=\"jumbotron col-sm-12 pull-center\">\r\n            <form onSubmit={e => addMovie(e)}>\r\n              <p>\r\n                <label> Movie Name: </label>\r\n                <br />\r\n                <input className=\"addMovieForm\" name=\"name\" type=\"text\"\r\n                  value={addMovieForm.name} onChange={e => updateForm(e.target)} />\r\n                <br />\r\n                <label> Location: </label>\r\n                <br />\r\n                <LocationList classNam=\"addMovieForm\" locations={locationList} val={addMovieForm.location}/>\r\n                {/*<select className=\"addMovieForm\" id=\"locations\"> </select> */}\r\n                <br />\r\n                <label> <input type=\"checkbox\" checked={addMovieForm.bluray} className=\"addMovieForm\"\r\n                  onChange={e => updateCheckBox(e.target)} name=\"bluray\"/> Bluray </label>\r\n                <label> <input type=\"checkbox\" checked={addMovieForm.dvd} className=\"addMovieForm\"\r\n                  onChange={e => updateCheckBox(e.target)} name=\"dvd\"/> DVD </label>\r\n                <br /> <br />\r\n                <input className=\"btn btn-primary\" type=\"submit\" value=\"Add Movie\" />\r\n                <input className=\"btn btn-primary\" onClick={resetAddMovieForm} value=\"Clear Movie Form\" />\r\n                <Link to=\"/main\" className=\"btn btn-primary\"> Cancel </Link>\r\n              </p>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddMovie;","import React from 'react';\r\nimport Header from './Header';\r\nimport { updateLoginForm, login } from \"./actions\";\r\nimport BaseReactComponent from \"./BaseReactComponent\";\r\n\r\nclass Login extends BaseReactComponent {\r\n  filterState({ loginForm }) {\r\n    return { loginForm };\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.props.history.push(\"/\");\r\n  }\r\n  render() {\r\n    const { loginForm } = this.state;\r\n    return (\r\n      <div className=\"container\">\r\n        <Header title=\"Authentication\" />\r\n        <div className=\"container row align-self-center\">\r\n          <div className=\"jumbotron col-sm-4\">\r\n            <form onSubmit={e => login(e)}>\r\n              <div>\r\n                <label>Name:</label> <br />\r\n                <input type=\"text\"\r\n                  name=\"name\"\r\n                  value={loginForm.name}\r\n                  onChange={e => updateLoginForm(e.target)} />\r\n              </div>\r\n              <div>\r\n                <label>Password:</label> <br />\r\n                <input type=\"password\"\r\n                  name=\"password\"\r\n                  value={loginForm.password}\r\n                  onChange={e => updateLoginForm(e.target)} />\r\n              </div> <br />\r\n              <div>\r\n                <input className=\"btn btn-primary\" type=\"submit\" value=\"Log In\" />\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;","import React from 'react';\r\nimport { imdbSearch, softDelete } from \"./actions\";\r\nimport './MovieList.css';\r\n\r\nclass Movie extends React.Component {\r\n  render() {\r\n    const { movie } = this.props;\r\n    return (\r\n      <li className=\"movieList\">\r\n        {\"Title: \" + movie.name}\r\n        <button className=\"imdb\" onClick={(e) => imdbSearch(movie.name)}> IMDB </button><br />\r\n        {\"Location: \" + movie.location}<br />\r\n        {\"Bluray: \" + (movie.bluray ? \"Yes\" : \"No\")}\r\n        <button className=\"delete\" onClick={(e) => softDelete(movie._id)}> Delete </button><br />\r\n        {\"DVD: \" + (movie.dvd ? \"Yes\" : \"No\")}\r\n      </li>\r\n    );\r\n  }\r\n}\r\nexport default Movie;","import React from 'react';\r\nimport Movie from './Movie';\r\nimport './MovieList.css';\r\n\r\n{ /* movies searched up will go in here */}\r\nclass MovieList extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  render() {\r\n    const movies = this.props.movies;\r\n    return (\r\n      <div id=\"movies\" className=\"container col-sm-12\">\r\n        <ul className=\"moviesList\">\r\n          { movies.map((movie) => {\r\n            return( <Movie key={ movie._id } movie={ movie } /> );\r\n          }) }\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MovieList;","import React from 'react';\r\n\r\n{ /* imdb info from movies searched up will go in here */}\r\nclass ImdbInfo extends React.Component {\r\n  render() {\r\n    const { info } = this.props;\r\n    return (\r\n      <div id=\"imdbInfo\" className=\"col-sm-6 jumbotron pull-center\">\r\n        { /* imdb info from movies searched up will go in here */}\r\n        {\"Title: \" + info.Title}\r\n        <br />\r\n        {\"Year: \" + info.Year}\r\n        <br />\r\n        {\"Runtime: \" + info.Runtime}\r\n        <br />\r\n        {\"Genre: \" + info.Genre}\r\n        <br />\r\n        {\"Director: \" + info.Director}\r\n        <br />\r\n        {\"Actors: \" + info.Actors}\r\n        <br />\r\n        {\"imdbRaiting: \" + info.imdbRating}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default ImdbInfo;","import React from 'react';\r\nimport LocationList from './LocationList';\r\nimport { updateForm, updateCheckBox, movieSearch, locationSearch } from \"./actions\";\r\nimport BaseReactComponent from \"./BaseReactComponent\";\r\nimport './SearchBar.css';\r\n\r\nclass SearchBar extends BaseReactComponent {\r\n  filterState({ movieForm, locationForm, locationList }) {\r\n    return { movieForm, locationForm, locationList };\r\n  }\r\n  render() {\r\n    const { movieForm, locationForm, locationList } = this.state;\r\n    return (\r\n      <div className=\"col-sm-6\">\r\n        <p> Search for a Movie </p>\r\n        <input className=\"movieForm\" name=\"name\" type=\"text\"\r\n          value={movieForm.name} onChange={e => updateForm(e.target)} />\r\n        <LocationList classNam=\"movieForm\" locations={locationList} val={movieForm.location} /><br />\r\n        <label className=\"movieForm\"> <input type=\"checkbox\" name=\"bluray\" checked={movieForm.bluray} className=\"movieForm\"\r\n          onChange={e => updateCheckBox(e.target)} /> Bluray </label>\r\n        <label className=\"movieForm\"> <input type=\"checkbox\" name=\"dvd\" checked={locationForm.dvd} className=\"movieForm\"\r\n          onChange={e => updateCheckBox(e.target)} /> DVD </label><br />\r\n        <button id=\"searchMovieBtn\" onClick={movieSearch}> Search Movie</button>\r\n        <br /><br />\r\n        <p> Search by Location </p>\r\n        <LocationList classNam=\"locationForm\" locations={locationList} val={locationForm.location} /><br />\r\n        <button id=\"searchLocationBtn\" onClick={locationSearch}> Search by location </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default SearchBar;","import React from 'react';\r\nimport { logout, clearSearch, deleteLocation, addLocation } from \"./actions\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n{ /* movies searched up will go in here */ }\r\nclass OptionsBar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  logoutUser = () => {\r\n    this.props.history.push(\"/\");\r\n    logout();\r\n  };\r\n  render() {\r\n    const movies = this.props.movies;\r\n    return (\r\n      <div>\r\n        <Link to=\"/deleted-movies\" className=\"btn btn-primary headerBar col-sm-2\"> View Deleted </Link>\r\n        <Link to=\"/add-movie\" className=\"btn btn-primary headerBar col-sm-2\"> Add Movie </Link>\r\n        <button className=\"btn btn-primary headerBar col-sm-2\" onClick={addLocation}> Add Location </button>\r\n        <button className=\"btn btn-primary headerBar col-sm-2\" onClick={deleteLocation}> Delete Location </button>\r\n        <button className=\"btn btn-primary headerBar col-sm-2\" onClick={clearSearch}> Clear Search </button>\r\n        <button className=\"btn btn-primary headerBar col-sm-2\" onClick={this.logoutUser}> Log Out </button><br/><br/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default OptionsBar;","import React from 'react';\r\nimport Header from './Header';\r\nimport MovieList from './MovieList';\r\nimport ImdbInfo from './ImdbInfo';\r\nimport SearchBar from './SearchBar';\r\nimport OptionsBar from './OptionsBar';\r\nimport { getLocations } from \"./actions\";\r\nimport BaseReactComponent from \"./BaseReactComponent\";\r\nimport './Main.css';\r\n\r\nclass Main extends BaseReactComponent {\r\n  filterState({ imdbInfo, movieList }) {\r\n    return { imdbInfo, movieList };\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.props.history.push(\"/main\");\r\n    getLocations();\r\n  }\r\n\r\n  render() {\r\n    const { imdbInfo, movieList } = this.state;\r\n    const { history } = this.props;\r\n    return (\r\n      <div className=\"container\">\r\n        <Header title=\"Main Dashboard\" />\r\n        <OptionsBar history={history} />\r\n        <div className=\"jumbotron col-sm-12 pull-center\">\r\n          <SearchBar />\r\n          {JSON.stringify(imdbInfo) !== '{}' && <ImdbInfo info={imdbInfo} />}\r\n        </div>\r\n        <MovieList movies={movieList} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Main;","/* New cleaned up version of App.js */\nimport React from 'react';\n\n// Importing react-router-dom to use the React Router\nimport './App.css';\nimport { Route, Switch, BrowserRouter } from \"react-router-dom\";\nimport BaseReactComponent from \"./BaseReactComponent\";\nimport DeletedMovies from './DeletedMovies';\nimport AddMovie from './AddMovie';\nimport Header from './Header';\nimport Login from './Login';\nimport Main from './Main';\nimport { readCookie } from \"./actions\";\n\nclass App extends BaseReactComponent {\n  // Access the global state paths\n  filterState({ currentUser, cookie }) {\n    return { currentUser, cookie };\n  }\n\n  constructor(props) {\n    super(props);\n    readCookie();\n  }\n\n  render() {\n    const { currentUser, cookie } = this.state;\n    if( cookie === false) {\n      return (<div className=\"container\"> <Header title=\"Loading\" /> </div>);\n    }\n    // console.log(currentUser);\n    return (\n      <BrowserRouter>\n        <Switch> {/* Similar to a switch statement - shows the component depending on the URL path */}\n          <Route exact path={\"/deleted-movies\"} render={({ history }) => (!currentUser ? <Login history={history} /> : <DeletedMovies history={history} />)} />\n          <Route exact path={\"/add-movie\"} render={({ history }) => (!currentUser ? <Login history={history} /> : <AddMovie history={history} />)} />\n          <Route exact path={[\"/\", \"/login\", \"/main\"]} render={({ history }) => (!currentUser ? <Login history={history} /> : <Main history={history} />)} />\n          <Route render={() => <div className=\"container\"> <Header title=\"404 Not found\" /> </div>} />\n        </Switch>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { startLogging } from \"statezero\";\nimport { setEmptyState } from \"./actions\";\n\n// Initially set all state paths needed in your app as empty.\nsetEmptyState();\n\n// startLogging from statezero logs updated state paths to the console\n// as your app sets/unsets state path values (very useful for debugging)\nstartLogging();\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}